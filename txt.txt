conda activate py310
code2prompt -p /home/zhixuanhu/IEDA_WeightedTraining/RealdataEXP -o /home/zhixuanhu/IEDA_WeightedTraining/RealdataEXP_prompt_202509011403.md --line-number -e "**/KuaiRand/*,**/results/*,**/__pycache__/*,**/.ipynb_checkpoints/*,**/.vscode/*,*.pt,*.pth,*.zip,*.tar.gz,*.log,**/venv/*,**/env/*"
code2prompt -p E:\MyDocument\Codes_notnut\_notpad\IEDA\RealdataEXP -o E:\MyDocument\Codes_notnut\_notpad\IEDA\RealdataEXP_prompt_202509011403.md --line-number -e "**/KuaiRand/*,**/results/*,**/__pycache__/*,**/.ipynb_checkpoints/*,**/.vscode/*,*.pt,*.pth,*.zip,*.tar.gz,*.log,**/venv/*,**/env/*"
code2prompt -p /home/export/base/sc100352/sc100352/online1/IEDA_WeightedTraining/RealdataEXP -o /home/export/base/sc100352/sc100352/online1/IEDA_WeightedTraining/RealdataEXP_prompt_202509011403.md --line-number -e "**/KuaiRand/*,**/results/*,**/__pycache__/*,**/.ipynb_checkpoints/*,**/.vscode/*,*.pt,*.pth,*.zip,*.tar.gz,*.log,**/venv/*,**/env/*"


module load amd/proxy/proxy-1.0
cd /home/export/base/sc100352/sc100352/online1/IEDA_WeightedTraining
git remote -v
git remote set-url origin https://github.com/arkhubs/IEDA_WeightedTraining.git
git remote set-url origin https://githubfast.com/arkhubs/IEDA_WeightedTraining.git
git config --global credential.helper libsecret
git config --global credential.helper 'cache --timeout=360000000000'
module load amd/git-lfs/2.7.2
git add -A .
git rm -r --cached .
git commit -m "push deleted"
git push


远程覆盖本地容易出现远程和本地冲突的情况
解决办法如下
// 从远程拉取所有内容
git fetch --all
// reset 本地代码
git reset --hard origin/main
// 重启拉取对齐
git pull


sinfo
salloc -p q_intel_gpu_nvidia_nvlink_2 --gres=gpu:1 --mem=512G --cpus-per-task=64
ssh gpu002
sh /home/export/base/sc100352/sc100352/online1/IEDA_WeightedTraining/RealdataEXP/run_gpu_yanc.sh
sh /home/export/base/sc100352/sc100352/online1/IEDA_WeightedTraining/RealdataEXP/monitor.sh

清理内存的方法：
free -h
nvidia-smi
或
ps aux --sort=-%mem | head -n 20
找到进程PID
kill -9 pid

cd RealdataEXP
conda activate E:\MyDocument\Codes_notnut\_notpad\IEDA\.conda
conda activate intelxpu
conda activate pytorchDML
python main.py --config configs/experiment_optimized.yaml
python main.py --config configs/experiment_ipex.yaml

conda create -n ieda python=3.12  
python -m ipykernel install --user --name coquiTTS --display-name "coquiTTS"                                              


预训练阶段一个epoch的32819是什么意思；
训练：batch_size:64，一个batch是一次iteration
计算：批次总数是样本总数除以批次大小，四舍五入得到最接近的整数。
计算：2,100,391 个样本 ÷64 个样本 / 批次 = 32818.6
四舍五入得到总批次数为 32819。


请把canvas中的内容的源代码提供给我，把它包裹在`代码块中，这样使它不会编译

你不需要给出完整代码，只需给出为copilot准备的详细修改指令，在哪里做出哪些修改；千万注意不要误删无关的代码部分

总结今晚所有修改，追加到头部：

我要提交commit了，取一个英文标题


val_click_accuracy不动，一直是同一个很低的值，我试着打印了一些log，可能可以看出问题来
可能是因为分界值不应该为0.5；另外造成的原因可能也是不平衡样本问题；
  Idx | Pred Click | Real Click | Pred Time | Real Time
 -----|------------|------------|-----------|-----------
  0   |     0.5771 |          0 |    4808.0 |     762.0
  1   |     0.6313 |          1 |    5732.0 |  120097.0
  2   |     0.5645 |          0 |    3896.0 |    1576.0
  3   |     0.6328 |          1 |    6868.0 |   16311.0
  4   |     0.6162 |          0 |    2512.0 |    1126.0
  5   |     0.6372 |          1 |    3700.0 |   33386.0
  6   |     0.6602 |          0 |    5980.0 |     877.0
  7   |     0.5894 |          1 |    1578.0 |    3811.0
考虑把F1的图画在一起

另外pred time的值似乎过于“平庸”，也就是都集中在1000-7000，没有适应real time的大方差，有无解决办法
比如log变换

大约在44000次迭代后，全部变成了nan
--- 迭代 44000: 运行验证 ---                                                                                                                      2025-09-01 15:06:56 - libs.modes.global_mode_optimized - INFO - --- Validation Prediction vs. Actuals (Sample) ---      
2025-09-01 15:06:56 - libs.modes.global_mode_optimized - INFO - 
  Idx | Pred Click | Real Click | Pred Time | Real Time
 -----|------------|------------|-----------|-----------
  0   |     0.5635 |          0 |       nan |     762.0
  1   |     0.6333 |          1 |       nan |  120097.0
  2   |     0.5645 |          0 |       nan |    1576.0
  3   |     0.6377 |          1 |       nan |   16311.0
  4   |     0.6235 |          0 |       nan |    1126.0
  5   |     0.6382 |          1 |       nan |   33386.0
  6   |     0.6611 |          0 |       nan |     877.0
  7   |     0.5908 |          1 |       nan |    3811.0

改模型结构 叫做什么双什么结构

发现问题：一个epoch内总是用同一批数据做validation，这有失公正，也许就是造成跨chunk时曲线剧烈波动的元凶

某次训练过程，我没有操作，但出现了调度器状态丢失，呈现为突然的爆炸
为仿真服务 -> 索引数据库 (SQLite)：我们将把所有处理好的数据，额外存储到一个SQLite数据库文件中。通过为 (user_id, video_id) 创建索引，我们可以实现毫秒级的随机查询，完美满足仿真阶段的需求。
linux torch。compile报错

A800价格：每小时8元左右
8 new Nvidia RTX5880 GPU nodes (each node with 6x RTX5880) have been added to  HPC4                                                                                                    HPC4.
